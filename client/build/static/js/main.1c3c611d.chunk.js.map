{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/IncomeExpenses.js","components/IndividualIncomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","loading","transactions","payload","filter","transaction","_id","error","transaction_key","initalState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","monthStart","monthEnd","a","axios","get","res","data","response","id","config","headers","delete","post","Provider","value","deleteTransaction","addTransaction","getTransactions","setTransactionKey","Balance","useContext","total","map","amount","reduce","acc","item","toFixed","useState","Date","currentMonthYear","setCurrentMonthYear","htmlFor","selected","onChange","date","moment","clone","startOf","format","endOf","reloadData","dateFormat","showMonthYearPicker","moneyFormatter","num","p","split","reverse","i","orig","IncomeExpenses","amounts","income","expense","className","IndividualIncomeExpenses","amountsSeldon","user_name","amountsLester","profitShare","incomeSeldon","expenseSeldon","profitShareSeldon","incomeLester","expenseLester","profitShareLester","Transaction","sign","description","Math","abs","onClick","TransactionList","FlashMessage","useEffect","AddTransaction","text","setText","setAmount","transactionDate","setTransactionDate","transactionUser","setTransactionUser","onSubmit","e","preventDefault","newTransaction","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c3c611d.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <h2>\r\n            Expense Tracker\r\n        </h2>\r\n    )\r\n}\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case 'GET_TRANSACTIONS':\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                transactions: action.payload\r\n            }\r\n        case 'DELETE_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: state.transactions.filter(transaction => transaction._id != action.payload),\r\n                error: null\r\n            }\r\n        case 'ADD_TRANSACTION':\r\n            return {\r\n                ...state,\r\n                transactions: [...state.transactions, action.payload],\r\n                error: null\r\n            }\r\n        case 'TRANSACTION_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n            }\r\n        case 'SET_TRANSACTION_KEY':\r\n            return {\r\n                ...state,\r\n                transaction_key: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer';\r\nimport axios from 'axios';\r\n\r\n//inital state\r\nconst initalState = {\r\n    transactions: [],\r\n    error: null,\r\n    loading: true,\r\n    transaction_key: ''\r\n}\r\n\r\n// Create Context\r\nexport const GlobalContext = createContext(initalState)\r\n\r\n// Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initalState);\r\n\r\n    //Actions\r\n    // Actions\r\n    async function getTransactions(monthStart, monthEnd) {\r\n        try {\r\n            const res = await axios.get('/transactions?startDate=' + monthStart + '&endDate=' + monthEnd);\r\n\r\n            dispatch({\r\n                type: 'GET_TRANSACTIONS',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function deleteTransaction(id, transaction_key) {\r\n        const config = {\r\n            headers: {\r\n                'trans-key': transaction_key\r\n            }\r\n        }\r\n        try {\r\n            await axios.delete(`/transactions/${id}`, config);\r\n\r\n            dispatch({\r\n                type: 'DELETE_TRANSACTION',\r\n                payload: id\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    async function addTransaction(transaction, transaction_key) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'trans-key': transaction_key\r\n            }\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/transactions', transaction, config);\r\n\r\n            dispatch({\r\n                type: 'ADD_TRANSACTION',\r\n                payload: res.data.data\r\n            });\r\n        } catch (err) {\r\n            dispatch({\r\n                type: 'TRANSACTION_ERROR',\r\n                payload: err.response.data.error\r\n            });\r\n        }\r\n    }\r\n\r\n    function setTransactionKey(transaction_key) {\r\n        dispatch({\r\n            type: 'SET_TRANSACTION_KEY',\r\n            payload: transaction_key\r\n        });\r\n    }\r\n    return (<GlobalContext.Provider value={{\r\n        error: state.error,\r\n        loading: state.loading,\r\n        transactions: state.transactions,\r\n        transaction_key: state.transaction_key,\r\n        deleteTransaction,\r\n        addTransaction,\r\n        getTransactions,\r\n        setTransactionKey\r\n    }}>\r\n        {children}\r\n    </GlobalContext.Provider>);\r\n}","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport moment from 'moment';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport const Balance = () => {\r\n    const { transactions, getTransactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const [currentMonthYear, setCurrentMonthYear] = useState(new Date());\r\n    const reloadData = date => {\r\n\r\n        let monthStart = moment(date).clone().startOf('month').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n        let monthEnd = moment(date).clone().endOf('month').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n        //console.log(monthStart);\r\n        //console.log(monthEnd);\r\n        getTransactions(monthStart, monthEnd);\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor=\"currentMonthYear\">Change Month Year</label>\r\n            <DatePicker\r\n                selected={currentMonthYear}\r\n                onChange={date => (setCurrentMonthYear(date), reloadData(date))}\r\n                dateFormat=\"MM/yyyy\"\r\n                showMonthYearPicker\r\n            />\r\n            <h4>Current Balance For Month</h4>\r\n            <h1 id=\"balance\">₹{total}</h1>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n    let p = num.toFixed(2).split('.');\r\n    return (\r\n        '₹ ' +\r\n        p[0]\r\n            .split('')\r\n            .reverse()\r\n            .reduce(function (acc, num, i, orig) {\r\n                return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n            }, '') +\r\n        '.' +\r\n        p[1]\r\n    );\r\n}\r\n\r\nexport const IncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n\r\n    const income = amounts\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0);\r\n\r\n    const expense = (\r\n        amounts.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    );\r\n\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Total Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">{moneyFormatter(income)}</p>\r\n            </div>\r\n            <div>\r\n                <h4>Total Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">{moneyFormatter(expense)}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\n//Money formatter function\r\nfunction moneyFormatter(num) {\r\n    let p = num.toFixed(2).split('.');\r\n    return (\r\n        '₹ ' +\r\n        p[0]\r\n            .split('')\r\n            .reverse()\r\n            .reduce(function (acc, num, i, orig) {\r\n                return num === '-' ? acc : num + (i && !(i % 3) ? ',' : '') + acc;\r\n            }, '') +\r\n        '.' +\r\n        p[1]\r\n    );\r\n}\r\n\r\nexport const IndividualIncomeExpenses = () => {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map(transaction => transaction.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n    const amountsSeldon = transactions.filter(transaction => transaction.user_name === 'Seldon').map(transaction => transaction.amount);\r\n    const amountsLester = transactions.filter(transaction => transaction.user_name === 'Lester').map(transaction => transaction.amount);\r\n    const profitShare = (total / 2).toFixed(2);\r\n    const incomeSeldon = amountsSeldon\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0);\r\n\r\n    const expenseSeldon = (\r\n        amountsSeldon.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    );\r\n    const profitShareSeldon = (incomeSeldon - expenseSeldon) - profitShare;\r\n    const incomeLester = amountsLester\r\n        .filter(item => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0);\r\n\r\n    const expenseLester = (\r\n        amountsLester.filter(item => item < 0).reduce((acc, item) => (acc += item), 0) *\r\n        -1\r\n    );\r\n\r\n    const profitShareLester = (incomeLester - expenseLester) - profitShare;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Total Income Seldon</h4>\r\n                    <p id=\"money-plus\" className=\"money plus\">{moneyFormatter(incomeSeldon)}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Total Expense Seldon</h4>\r\n                    <p id=\"money-minus\" className=\"money minus\">{moneyFormatter(expenseSeldon)}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>To Be {profitShareSeldon < 0 ? 'Credited' : 'Debited'}</h4>\r\n                    <p id=\"money-minus\" className={profitShareSeldon < 0 ? 'money plus' : 'money minus'}>{moneyFormatter(profitShareSeldon)}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"inc-exp-container\">\r\n                <div>\r\n                    <h4>Total Income Lester</h4>\r\n                    <p id=\"money-plus\" className=\"money plus\">{moneyFormatter(incomeLester)}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>Total Expense Lester</h4>\r\n                    <p id=\"money-minus\" className=\"money minus\">{moneyFormatter(expenseLester)}</p>\r\n                </div>\r\n                <div>\r\n                    <h4>To Be {profitShareLester < 0 ? 'Credited' : 'Debited'}</h4>\r\n                    <p id=\"money-minus\" className={profitShareLester < 0 ? 'money plus' : 'money minus'}>{moneyFormatter(profitShareLester)}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport moment from 'moment';\r\n\r\nexport const Transaction = ({ transaction }) => {\r\n    const { deleteTransaction, transaction_key } = useContext(GlobalContext);\r\n    const sign = transaction.amount < 0 ? '-' : '+';\r\n    return (\r\n        <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\r\n            {moment(transaction.date).format('DD-MM-YYYY')} &nbsp; &nbsp;{transaction.description}({transaction.user_name}) <span>{sign}₹{Math.abs(transaction.amount)}</span>\r\n            <button className=\"delete-btn\" onClick={() => deleteTransaction(transaction._id, transaction_key)}>x</button>\r\n        </li>\r\n    )\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Transaction } from './Transaction';\r\nimport moment from 'moment';\r\n\r\nexport const TransactionList = () => {\r\n    const { transactions, getTransactions, error } = useContext(GlobalContext);\r\n    useEffect(() => {\r\n        let monthStart = moment(new Date()).clone().startOf('month').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n        let monthEnd = moment(new Date()).clone().endOf('month').format('YYYY-MM-DD[T00:00:00.000Z]');\r\n        getTransactions(monthStart, monthEnd);\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    let FlashMessage;\r\n\r\n    if (error) {\r\n        FlashMessage = <div className=\"alert alert-error\"><p>Error Message:{error}</p></div>;\r\n    } else {\r\n        FlashMessage = <div></div>;\r\n    }\r\n    return (\r\n        <div>\r\n            {FlashMessage}\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transactions.map(transaction => (\r\n                    <Transaction key={transaction._id} transaction={transaction} />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport moment from 'moment';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState(0);\r\n    const [transactionDate, setTransactionDate] = useState(new Date());\r\n    const [transactionUser, setTransactionUser] = useState('');\r\n    const { addTransaction, transaction_key, setTransactionKey } = useContext(GlobalContext);\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const newTransaction = {\r\n            description: text,\r\n            amount: +amount,\r\n            user_name: transactionUser,\r\n            date: moment(transactionDate).format('YYYY-MM-DD[T00:00:00.000Z]')\r\n        }\r\n\r\n        addTransaction(newTransaction, transaction_key);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Description</label>\r\n                    <input type=\"text\" value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\"\r\n                    >Amount <br />\r\n            (negative - expense, positive - income)</label\r\n                    >\r\n                    <input type=\"number\" value={amount} onChange={(e) => setAmount(e.target.value)} placeholder=\"Enter amount...\" />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"transactionDate\"\r\n                    >Transaction Date</label\r\n                    ><br />\r\n                    <DatePicker dateFormat=\"dd-M-yyyy\" selected={transactionDate} onChange={date => setTransactionDate(date)} />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"transactionDate\"\r\n                    >Transaction User</label\r\n                    ><br />\r\n                    <div className=\"select\">\r\n                        <select value={transactionUser} onChange={(e) => setTransactionUser(e.target.value)}>\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Seldon\">Seldon</option>\r\n                            <option value=\"Lester\">Lester</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"trans_key\">Transaction Key</label>\r\n                    <input type=\"text\" onChange={(e) => setTransactionKey(e.target.value)} placeholder=\"Enter text...\" />\r\n                </div>\r\n                <button className=\"btn\" >Add transaction</button>\r\n            </form>\r\n        </div >\r\n    )\r\n}\r\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { IndividualIncomeExpenses } from './components/IndividualIncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport './App.css';\n\nimport { GlobalProvider } from './context/GlobalState';\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeExpenses />\n        <IndividualIncomeExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}